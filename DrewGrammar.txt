program      : statement *                                                     ;
statement    : printstat           
             | blockstat   
             | ifstat      
             | whilestat   
             | assignstat
             | funcdef
             | funccall
             | exprstat
             ;

assignstat   : NAME '='  expr ';'                                               ;  
printstat    : 'print' '(' expr ')' ';'                                         ;
ifstat       : 'if' '(' test ')' statement                                      ;
whilestat    : 'while' '(' test ')' statement                                   ;
blockstat    : '{' statement *  '}'                                             ;
exprstat     : expr ';'                                                         ;

expr         : term ( add_op term ) *                                           ;
term         : atom ( mult_op atom ) *                                          ;
atom         : NAME | NUMBER | STRING | funccall                                ;
test         : expr cmp_op expr                                                 ;

funcdef      : 'def' NAME parameters statement                                  ;
funccall     : NAME parameters ';'                                              ;
parameters   : '(' exprlist ? ')'                                               ;
exprlist     : expr ( ',' expr ) *                                              ;

cmp_op       : '==' | '>=' | '<=' | '>' | '<'                                   ;
add_op       : '+' | '-'                                                        ;
mult_op      : '*' | '/'                                                        ;

# Map rule_name to the token_name that predicts said rule:
# I think I can delete these hand-written predicates now, I auto-generate these.
PREDICATES: 

#namelist -> NAME
assignstat -> NAME&EQUALS
NAME -> NAME
NUMBER -> NUMBER
STRING -> STRING
GE -> GT&EQUALS
LE -> LT&EQUALS
funccall -> NAME&LPAREN
#parameters -> LPAREN
END

TOKENS: 
# Name of token:      Token Text:
#---------------------------------
COMMA                   ','
PERIOD                  '.'
LPAREN                  '('
RPAREN                  ')'
LCURBRACK               '{'
RCURBRACK               '}'  
LBRACK                  '['
RBRACK                  ']'
SEMICOLON               ';'
COLON                   ':'
EQUALS                  '='
DEQUALS                 '=='
GT                      '>'
GE                      '>='
LT                      '<' 
LE                      '<='  
QUOTE                   "'"
DQUOTE                  '"'
STAR                    '*'
PLUS                    '+'
DASH                    '-'
FSLASH                  '/'
BSLASH                  '\'
IF                      'if' 
WHILE                   'while'
PRINT                   'print'
DEF                     'def'
NAME                    NON_PRE_DEF     ( ( 'a' .. 'z' ) | ( 'A' .. 'Z' ) ) *
NUMBER                  NON_PRE_DEF     ( '0' .. '9' ) * 
STRING                  NON_PRE_DEF     '"' . * '"'              
END 
                                        